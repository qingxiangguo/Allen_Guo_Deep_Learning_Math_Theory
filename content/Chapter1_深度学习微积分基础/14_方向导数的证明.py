# _*_ coding=utf-8 _*_
"""
下面从代数角度，理解方向导数，现在设有一个函数，f(x, y, z),在二维平面上，有一个点(x0,y0)
沿着方向向量，l的方向，移动了t距离，设角度α = XOL, β = YOL
那么之前点的坐标，是(x0, y0)，移动后的坐标是，(x0 + tcosα, y0 + tcosβ)

那么我们把l方向向量上，在x0, y0处的方向导数定义为

dZ/dl(x0, y0) = limit t->0, [f(x0 + tcosα, y0 + tcosβ) - f(x0, y0)]/t

到这里就可以看出，偏导数，就是方向导数的特例，比如关于x的偏导数就是，α = 0， β = 90
（x0, y0）沿着x轴变化， 由于cosα = 1， cosβ = 0，原式子就变成了

limit t->0, [f(x0 + t, y0) - f(x0, y0)]/t，这不就是函数在(x0, y0)处，关于x的偏导数定义吗？
--------------------------------------------------------------
下面给出，并试图证明，方向导数的正式公式（需要可微）：
dZ/dl(x0, y0) = fx(x0, y0)cosα + fy(x0, y0)cosβ
翻译过来就是：一个函数在某点处的，某个方向上的，方向导数，等于偏导x*cosα + 偏导ycosβ

这个公式的证明，要用到可微的公式，即函数满足：Δz = AΔx + BΔy + o(√(Δx²+Δy²))
由于全微分在各个方向上都成立，所以在l方向上，也成立。由于Δx = tcosα， Δy = tcosβ， Δx²+Δy² = t²
代入全微分公式，可得：
f(x0 + tcosα, y0 + tcosβ) - f(x0, y0) = (x偏导)*tcosα + (y偏导)*tcosβ + o(t)
上面式子两边除以t，可得
左边= [f(x0 + tcosα, y0 + tcosβ) - f(x0, y0)]/t 就是方向导数
右边 = (x偏导)*cosα + (y偏导)*cosβ

所以公式得证，某点处方向导数 = fx(x0, y0)cosα + fy(x0, y0)cosβ

下面以一个三元函数，做一个例题：
求u = 3x² + 2y² - z²在（0， 2， -1）处，沿l = (2, -1, -2)的方向导数
解：方向导数 = （x偏导）cosα + (y偏导）cosβ + (z偏导）cosγ
x偏导 = 6x,   y偏导 = 4y,   z偏导 = -2z
l向量的模 = 3， 所以单位向量l0 = (2/3, -1/3, -2/3)
接下来巧妙的用到了，单位向量就可以表示为（cosα, cosβ），同样的三元函数中，
单位向量 = （cosα, cosβ，cosγ）= （2/3, -1/3, -2/3）
所以，cosα, cosβ，cosγ分别等于2/3, -1/3, -2/3

最终，方向导数 = (x偏导）cosα + (y偏导）cosβ + (z偏导）cosγ， 就可以代入求出了

但是【关键地方来了】，我们会发现，(x偏导）cosα + (y偏导）cosβ + (z偏导）cosγ，这个式子很熟悉
我们可以把，方向导数变成，(x偏导, y偏导, z偏导) 点乘 (cosα, cosβ, cosγ)
关于点乘，请看【深度学习线性代数基础】
所以方向导数 = (0, 8, 2) . (2/3, -1/3, -2/3)  = -4

为什么要特地的这样变形呢？因为(0, 8, 2)，也就是(x偏导, y偏导, z偏导)，就是梯度向量
而(cosα, cosβ, cosγ)，就是单位向量，所以可以知道，方向导数和梯度向量是息息相关的
"""